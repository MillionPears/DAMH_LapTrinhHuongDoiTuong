package BanHang_HoaDon;

import BanHang_HoaDon.NhanVienDAO;
import BanHang_HoaDon.TaiKhoanDao;
//import DAO.TaiKhoanDao;
import helper.DataValidator;
import helper.MessageDialogHelper;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.NhanVien;
import model.SanPham;
import model.TaiKhoan;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author ASUS
 */
public class PanelNhanVienApp extends javax.swing.JPanel {

    DefaultTableModel tblModel= null;
    DefaultTableModel tblModelX= null;
    private ArrayList<NhanVien> list=new ArrayList();
    public String avtarMD="D:\\CODE_JAVA\\CuaHangDienThoai\\src\\com\\mycompany\\ql_cuahangdienthoai\\icon\\business128.png";
    public String anh_Address="";
    TaiKhoanDao taiKhoanDao=new TaiKhoanDao();
    public PanelNhanVienApp() {
        initComponents();
        initTable();
        loadDataToTable();
        loadDataToTableDeleteTT0();

    }

     private void initTable()
    {
        
        tblNhanVien.getColumnModel().getColumn(1).setPreferredWidth(27);
        tblModel=(DefaultTableModel)tblNhanVien.getModel();
        tblModelX=(DefaultTableModel)tblNhanVienX.getModel();
        
       // String []col0=new String[]{"MANV","Họ Và Tên","SDT","Email","Giới Tính","Vai trò","Ngày Nghỉ","Số Tháng Làm"};
        //String []col=new String[]{"MANV","Họ Và Tên","CMND","Giới Tính","Vai trò","Ngày Làm"};
        //tblModel.setColumnIdentifiers(col);
       // tblModelX.setColumnIdentifiers(col0);
        
        tblNhanVien.setModel(tblModel);
        tblNhanVienX.setModel(tblModelX);
        
         tblNhanVien.getTableHeader().setBackground(Color.BLUE);
        tblNhanVien.getTableHeader().setForeground(Color.blue);
        tblNhanVienX.getTableHeader().setBackground(Color.BLUE);
        tblNhanVienX.getTableHeader().setForeground(Color.blue);
        
    }
    private void loadDataToTable() {
        try {
             ArrayList<NhanVien> list=NhanVienDAO.findAll();
            
            tblModel.setRowCount(0);
            for (NhanVien nv : list) {
            tblModel.addRow(new Object[]{nv.getMaNV(),nv.getHoten(),nv.getCmnd(),nv.getGioitinh(),nv.getVaitro(),nv.getNgaylam() });
                
            }
            
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, "Lỗi truy xuất dữ liệu", "Lỗi");
        }
    }
    public  void loadDataToTableDeleteTT0() {
        try {
             
              ArrayList<NhanVien> list=NhanVienDAO.findAllTT0();
          
            tblModelX.setRowCount(0);
            for (NhanVien nv : list) {
            tblModelX.addRow(new Object[]{nv.getMaNV(),nv.getHoten(),nv.getSdt(),nv.getEmail(),nv.getGioitinh(),nv.getVaitro(),nv.getNgayNghi()});

            }
            tblModelX.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, "Lỗi truy xuất dữ liệu", "Lỗi");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGGioiTinh = new javax.swing.ButtonGroup();
        btnGVaitro = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblAvatar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnADD = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        txtMaNhanVien = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtHoTenNV = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rdNam = new javax.swing.JRadioButton();
        rdNu = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rdTruongPhong = new javax.swing.JRadioButton();
        rdNhanVien = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAGhichu = new javax.swing.JTextArea();
        dateChNgaySinh = new com.toedter.calendar.JDateChooser();
        datechNgayLam = new com.toedter.calendar.JDateChooser();
        chk_CapQuyen = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearchX = new javax.swing.JTextField();
        btnTimKiemNVX = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNhanVienX = new javax.swing.JTable();
        btnRestore = new javax.swing.JButton();
        txtMaNvDaXoa = new javax.swing.JTextField();
        txtTenNVDaXoa = new javax.swing.JTextField();
        btnKhoiPhuc = new javax.swing.JButton();
        btnXoaVinhVien = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        jLabel10.setText("Tìm Kiếm");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MANV", "Họ và Tên", "CMND", "Giới Tính", "Vai Trò", "Ngày Làm", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblNhanVien.setToolTipText("");
        tblNhanVien.setAutoscrolls(false);
        tblNhanVien.setRowHeight(25);
        tblNhanVien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblNhanVien.setShowGrid(true);
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNhanVien);
        tblNhanVien.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblNhanVien.getColumnModel().getColumnCount() > 0) {
            tblNhanVien.getColumnModel().getColumn(0).setMinWidth(10);
            tblNhanVien.getColumnModel().getColumn(1).setMinWidth(120);
            tblNhanVien.getColumnModel().getColumn(2).setMinWidth(10);
            tblNhanVien.getColumnModel().getColumn(3).setMinWidth(5);
            tblNhanVien.getColumnModel().getColumn(4).setMinWidth(50);
            tblNhanVien.getColumnModel().getColumn(5).setMinWidth(20);
        }

        btnSearch.setBackground(new java.awt.Color(0, 0, 51));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/search016.png"))); // NOI18N
        btnSearch.setText("Tìm Kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblAvatar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/business128.png"))); // NOI18N
        lblAvatar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAvatarMouseClicked(evt);
            }
        });

        jLabel2.setText("Mã nhân viên");

        btnADD.setBackground(new java.awt.Color(0, 0, 51));
        btnADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/add32.png"))); // NOI18N
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(0, 0, 51));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/pencil32.png"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 0, 51));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/delete32.png"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(0, 0, 51));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/star32.png"))); // NOI18N
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        txtMaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNhanVienActionPerformed(evt);
            }
        });

        jLabel13.setText("Họ và tên");

        txtHoTenNV.setNextFocusableComponent(txtEmail);
        txtHoTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenNVActionPerformed(evt);
            }
        });

        jLabel14.setText("Địa chỉ");

        txtDiaChi.setNextFocusableComponent(datechNgayLam);

        jLabel3.setText("Email");

        txtEmail.setNextFocusableComponent(txtSDT);
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel4.setText("Số Điện Thoại");

        txtSDT.setNextFocusableComponent(dateChNgaySinh);
        txtSDT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSDTFocusGained(evt);
            }
        });

        jLabel5.setText("Giới Tính");

        btnGGioiTinh.add(rdNam);
        rdNam.setSelected(true);
        rdNam.setText("Nam");

        btnGGioiTinh.add(rdNu);
        rdNu.setText("Nữ");

        jLabel6.setText("Ngày Sinh");

        jLabel7.setText("Vai trò");

        btnGVaitro.add(rdTruongPhong);
        rdTruongPhong.setText("Trưởng Phòng");

        btnGVaitro.add(rdNhanVien);
        rdNhanVien.setSelected(true);
        rdNhanVien.setText("Nhân Viên");

        jLabel8.setText("Ngày bắt đầu làm");

        jLabel9.setText("Ghi chú");

        txtAGhichu.setColumns(20);
        txtAGhichu.setRows(5);
        jScrollPane1.setViewportView(txtAGhichu);

        dateChNgaySinh.setNextFocusableComponent(txtDiaChi);

        datechNgayLam.setNextFocusableComponent(txtAGhichu);

        chk_CapQuyen.setText("Cấp Quyền Truy Cập");
        chk_CapQuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_CapQuyenActionPerformed(evt);
            }
        });

        jLabel11.setText("CMND");

        txtCMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMNDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail)
                            .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(rdNam)
                                .addGap(31, 31, 31)
                                .addComponent(rdNu))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateChNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel13)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(chk_CapQuyen))
                                            .addComponent(jLabel7)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(rdTruongPhong)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdNhanVien))
                                            .addComponent(jLabel8)
                                            .addComponent(datechNgayLam, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11)
                                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(txtHoTenNV)
                                    .addComponent(txtCMND))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHoTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(rdNam)
                                    .addComponent(rdNu))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateChNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(chk_CapQuyen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdTruongPhong)
                                    .addComponent(rdNhanVien))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datechNgayLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEdit)
                            .addComponent(btnDelete)
                            .addComponent(btnNew)
                            .addComponent(btnADD))
                        .addContainerGap(48, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Danh sách Nhân Viên Đang Làm Việc", jPanel2);

        jLabel1.setText("Tìm Kiếm");

        txtSearchX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchXActionPerformed(evt);
            }
        });

        btnTimKiemNVX.setBackground(new java.awt.Color(0, 0, 102));
        btnTimKiemNVX.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTimKiemNVX.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiemNVX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/search016.png"))); // NOI18N
        btnTimKiemNVX.setText("Tìm Kiếm");
        btnTimKiemNVX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemNVXActionPerformed(evt);
            }
        });

        tblNhanVienX.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MANV", "Họ Và Tên", "SDT", "Email", "Giới Tính", "Vai Trò", "Ngày Nghỉ", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblNhanVienX.setRowHeight(25);
        tblNhanVienX.setShowGrid(true);
        tblNhanVienX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienXMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblNhanVienX);
        if (tblNhanVienX.getColumnModel().getColumnCount() > 0) {
            tblNhanVienX.getColumnModel().getColumn(1).setMinWidth(120);
            tblNhanVienX.getColumnModel().getColumn(3).setMinWidth(150);
            tblNhanVienX.getColumnModel().getColumn(4).setMinWidth(5);
        }

        btnRestore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/restart16.png"))); // NOI18N
        btnRestore.setText("Restore");
        btnRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestoreActionPerformed(evt);
            }
        });

        txtMaNvDaXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNvDaXoaActionPerformed(evt);
            }
        });

        txtTenNVDaXoa.setEditable(false);
        txtTenNVDaXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtTenNVDaXoaMouseEntered(evt);
            }
        });

        btnKhoiPhuc.setBackground(new java.awt.Color(0, 102, 0));
        btnKhoiPhuc.setForeground(new java.awt.Color(255, 255, 255));
        btnKhoiPhuc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/restart16.png"))); // NOI18N
        btnKhoiPhuc.setText("Khôi Phục");
        btnKhoiPhuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhoiPhucActionPerformed(evt);
            }
        });

        btnXoaVinhVien.setBackground(new java.awt.Color(255, 102, 51));
        btnXoaVinhVien.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaVinhVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/ql_cuahangdienthoai/icon/delete16.png"))); // NOI18N
        btnXoaVinhVien.setText("Xóa Vĩnh Viễn");
        btnXoaVinhVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaVinhVienActionPerformed(evt);
            }
        });

        jLabel18.setText("Mã Nhân Viên:");

        jLabel19.setText("Tên Nhân Viên:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtSearchX, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTimKiemNVX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRestore))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 753, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTenNVDaXoa))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel18)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtMaNvDaXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnXoaVinhVien)
                                .addGap(18, 18, 18)
                                .addComponent(btnKhoiPhuc)))))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemNVX)
                    .addComponent(btnRestore))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtMaNvDaXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtTenNVDaXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXoaVinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKhoiPhuc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(90, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Danh sách Nhân Viên đã nghỉ việc", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
      try {
              ArrayList<NhanVien> list =NhanVienDAO.findNameNhanVien(txtSearch.getText());
             
           //  listSP=SanPhamDAO.findAll();
            tblModel.setRowCount(0);
            for (NhanVien nv : list) {
               tblModel.addRow(new Object[]{nv.getMaNV(),nv.getHoten(),nv.getCmnd(),nv.getGioitinh(),nv.getVaitro(),nv.getNgaylam() });

            }
            tblModel.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, "Lỗi truy xuất dữ liệu", "Lỗi");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestoreActionPerformed
        btnKhoiPhucActionPerformed(evt);
    }//GEN-LAST:event_btnRestoreActionPerformed

    private void txtSDTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSDTFocusGained

    }//GEN-LAST:event_txtSDTFocusGained
     public  boolean capTaiKhoan_check(JTextField txt1,JTextField txt2,JTextField txt3){
         StringBuilder sb=new StringBuilder();
         DataValidator.empty_Data(txt1, sb, "");
         DataValidator.name_Check(txt2, sb);
         DataValidator.cmnd_Check(txt3, sb);
         if(sb.length()<=0)
         {
             return true;
         }
         return false;
     }
    private void txtMaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNhanVienActionPerformed
     
        String tmp=txtMaNhanVien.getText();
        try {
            NhanVien nv=NhanVienDAO.findById(txtMaNhanVien.getText());
            if(nv!=null)
            {
                showThongTinNhanVien(nv);
                
            } 
            else{
                btnNewActionPerformed(evt);
                txtMaNhanVien.setText(tmp);
            }
        } catch (Exception ex) {
        }
        txtHoTenNV.requestFocus();
      
      
    }//GEN-LAST:event_txtMaNhanVienActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        
        StringBuilder sb=check_giaodienThemNV();
        
        if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(jPanel2, sb.toString(), "EROR");
            return;
        }
        try {
           
            NhanVien nv1=NhanVienDAO.findById(txtMaNhanVien.getText());
              if(nv1!=null)
                {
                    TaiKhoan tk=taiKhoanDao.findById(nv1.getMaNV());
                    
                 if(nv1.getTrangThai()==0){
                   if(MessageDialogHelper.showConfirmDialog(null, "Nhân Viên đã Xóa khỏi danh sách \nbạn có muốn khôi phục Không?", "Xác Nhận")==JOptionPane.YES_OPTION)
                      {
                          nv1.setTrangThai(1);
                          if(tk.getTrangThai()==10){
                              tk.setTrangThai(1);
                          }
                        
                         if(NhanVienDAO.updateTrangThai0_1(nv1) && taiKhoanDao.updateTrangThai0_1(tk))
                            {
                                
                               // btnNewActionPerformed(evt);
                                loadDataToTable();
                                loadDataToTableDeleteTT0();

                                 MessageDialogHelper.showMessageDialog(this, "Nhân Viên đã được Khôi Phục thành công","Thông Báo");

                                 return;
                             }
                        }else return;
                    }
                  if(MessageDialogHelper.showConfirmDialog(jPanel2, "Nhân Viên đã tồn tại \nBạn có muốn cập nhật Thông Tin Nhân Viên", "Xác Nhận")==JOptionPane.YES_OPTION){
                     // lệnh cập nhật thông tin nhân viên
                      NhanVien nv=initNhanVien();

                      if(chk_CapQuyen.isSelected()==true)
                             {
                                 tk.setTrangThai(1);
                             }
                            else tk.setTrangThai(0);
                     if(NhanVienDAO.update(nv) && taiKhoanDao.updateTrangThai0_1(tk) ){
                           
                         MessageDialogHelper.showMessageDialog(this, "Thông Tin Nhân Viên đã cập nhật thông tin ","Thông Báo");
                         btnNewActionPerformed(evt);
                         
                         
                        }
                    else
                        {
                          MessageDialogHelper.showConfirmDialog(this, "Sự cố kỹ thuật vui lòng thử lại sau!","Lỗi");
                         
                        }
                     
                  }else return;
                  MessageDialogHelper.showMessageDialog(this, "Thông Tin Nhân Viên đã được thay đổi","Thông Báo");
                  loadDataToTable();
                  return;
                }
                  
              NhanVien nv=initNhanVien();
              
            
            
          
              if(NhanVienDAO.insert(nv) ){
                   TaiKhoan tk=initTaiKhoan(nv);
                  if(chk_CapQuyen.isSelected()==true)
                  {
                      taiKhoanDao.insert(tk);
                  }
                  else
                      {
                          tk.setTrangThai(0);
                          taiKhoanDao.insert(tk);
                      }
                  
                 MessageDialogHelper.showMessageDialog(this, "Nhân Viên đã được thêm vào danh sách","Thông Báo");
                 btnNewActionPerformed(evt);
                 }
              else{
                   MessageDialogHelper.showConfirmDialog(this, "Sự cố kỹ thuật vui lòng thử lại sau!","Lỗi");
                   }
           
            loadDataToTable();
            

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(e.getMessage());
            MessageDialogHelper.showErrorDialog(jPanel2, "lỗi thêm Nhân Viên", "ERROR");
        }

    }//GEN-LAST:event_btnADDActionPerformed

    public NhanVien initNhanVien() {
        NhanVien nv=new NhanVien();
        nv.setMaNV(txtMaNhanVien.getText().toUpperCase());
        nv.setHoten(DataValidator.xuLiChuoi(txtHoTenNV.getText()));
        nv.setSdt(txtSDT.getText());
        nv.setEmail(txtEmail.getText());
        nv.setNgaylam(datechNgayLam.getDate());
        nv.setNgaysinh(dateChNgaySinh.getDate());
        nv.setGioitinh(rdNam.isSelected()?"Nam":"Nữ");
        nv.setDiachi(txtDiaChi.getText());
        nv.setVaitro(rdNhanVien.isSelected()?"Nhân Viên":"Trưởng Phòng");
        nv.setQuyenDangNhap(chk_CapQuyen.isSelected()?1:0);
        nv.setGhichu(txtAGhichu.getText());
        nv.setHinhAnh(anh_Address);
        nv.setTrangThai(1);
        nv.setCmnd(txtCMND.getText());
        return nv;
    }
    public TaiKhoan initTaiKhoan(NhanVien nv) {
        TaiKhoan tk=new TaiKhoan();
        tk.setTenDangNhap(nv.getMaNV().toLowerCase()+"tnt");
        tk.setMatKhau("123");
        tk.setMaNV(nv.getMaNV());
        // xem xet lại có enen lấy vai trò kh
     //   tk.setVaiTro(nv.getVaitro());
        
        
        return tk;
    }

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
       try {
            int row=tblNhanVien.getSelectedRow();
            if(row>=0)
            {
                String id=(String) tblNhanVien.getValueAt(row, 0);
                NhanVien nv=NhanVienDAO.findById(id);
               
                if(nv!=null )
                { 
                   
                    showThongTinNhanVien(nv);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblNhanVienMouseClicked

    public void showThongTinNhanVien(NhanVien nv) {
        txtMaNhanVien.setText(nv.getMaNV());
        txtHoTenNV.setText(nv.getHoten());
        txtCMND.setText(nv.getCmnd());
        txtEmail.setText(nv.getEmail());
        txtSDT.setText(nv.getSdt());
        dateChNgaySinh.setDate(nv.getNgaysinh());
        if(nv.getGioitinh().equals("Nam")) rdNam.setSelected(true);
        else  rdNu.setSelected(true);
        txtDiaChi.setText(nv.getDiachi());
        if(nv.getVaitro().equals("Nhân Viên")) rdNhanVien.setSelected(true);
        else rdTruongPhong.setSelected(true);
        datechNgayLam.setDate(nv.getNgaylam());
        txtAGhichu.setText(nv.getGhichu());
        if(nv.getQuyenDangNhap()==1) chk_CapQuyen.setSelected(true);
        else chk_CapQuyen.setSelected(false);
        lblAvatar.setIcon(reSizeImage(nv.getHinhAnh()));
    }

    private void lblAvatarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvatarMouseClicked
       try {
            JFileChooser f=new JFileChooser("D:\\CODE_JAVA\\CuaHangDienThoai\\src\\image");
            f.setDialogTitle("Mở File");
            f.showOpenDialog(null);
            File ftenAnh= f.getSelectedFile();
            anh_Address=ftenAnh.getAbsolutePath();
            if(anh_Address!=null)
            {
                lblAvatar.setIcon(reSizeImage(String.valueOf(anh_Address)));
            }
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_lblAvatarMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        deleteKhungNhap();
       
       
    }//GEN-LAST:event_btnNewActionPerformed

    public void deleteKhungNhap() {
        txtMaNhanVien.setText("");
        txtHoTenNV.setText("");
        txtCMND.setText("");
        txtEmail.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");
        txtAGhichu.setText("");
        chk_CapQuyen.setSelected(false);
        rdNam.setSelected(true);
        rdNhanVien.setSelected(true);
        dateChNgaySinh.setDate(null);
        datechNgayLam.setDate(null);
        showAvatar(avtarMD);
        txtMaNhanVien.setBackground(Color.white);
        txtHoTenNV.setBackground(Color.white);
        txtCMND.setBackground(Color.white);
        txtEmail.setBackground(Color.white);
        txtSDT.setBackground(Color.white);
        dateChNgaySinh.setBackground(Color.white);
        datechNgayLam.setBackground(Color.white);
    }

    private void xoaNhieuNV() throws Exception
    {
        ArrayList<NhanVien>list=NhanVienDAO.findAll();
        ArrayList<String> listNV=new ArrayList<>();
        int i=0;
        for (NhanVien nv :list ) {
            if(i>=list.size()) return;
            if(tblNhanVien.getValueAt(i, 6)==null) {
                
                 i++;
                 continue;
            }
            if((boolean)tblNhanVien.getValueAt(i, 6)==true){
                listNV.add(nv.getMaNV());
                i++;
        }
        }
        if (listNV.size()<2)
        {
            
            return;
        }
        deleteKhungNhap();
        
        if( MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn xóa "+listNV.size()+" Nhân Viên này không ?", "Xác Nhận")==JOptionPane.YES_OPTION){
             for (String manv : listNV) {
                 NhanVien nv=NhanVienDAO.findById(manv);
                 nv.setTrangThai(0);
                 NhanVienDAO.updateTrangThai0_1(nv);
                }
             loadDataToTableDeleteTT0();
             loadDataToTable();
              
             
        }else return;
        
       
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       
        
         try {
            xoaNhieuNV();
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
        StringBuilder sb=new StringBuilder();
        DataValidator.empty_Data(txtMaNhanVien, sb, "Mã Nhân Viên không được để trống");
        if(sb.length()>0)
        {
           // MessageDialogHelper.showErrorDialog(this, sb.toString(), "Lỗi");
            txtMaNhanVien.setBackground(Color.white);
            return;
        }
        if(MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn xóa Nhân Viên không?", "Xác nhận")==JOptionPane.YES_OPTION)
        {
           try {
            NhanVien nv=NhanVienDAO.findById(txtMaNhanVien.getText());
              if(nv!=null){
                  TaiKhoan tk=taiKhoanDao.findById(nv.getMaNV());
                  nv.setTrangThai(0);
                  if(tk.getTrangThai()==1){
                              tk.setTrangThai(10);
                          }
                  Date now=new Date();
                  nv.setNgayNghi(now);
                  if(NhanVienDAO.updateTrangThai0_1(nv) && taiKhoanDao.updateTrangThai0_1(tk) && NhanVienDAO.updateNgayNghi(nv))
                    {
                        
                          
                        MessageDialogHelper.showMessageDialog(this, "Nhân Viên đã được xóa","Thông Báo");
                        btnNewActionPerformed(evt);
                        loadDataToTable();
                        loadDataToTableDeleteTT0();
                        
                       
                    }
                  
              }else{
                MessageDialogHelper.showErrorDialog(this, "Nhân Viên không tồn tại, không thể xóa","Lỗi");
                }
          
         
         
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, e.getMessage(), "Lỗi");
            
            
        }
        }

        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
       StringBuilder sb=check_giaodienThemNV();
        
         if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(jPanel2, sb.toString(), "EROR");
            return;
        }
         if(MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn cập nhật thông tin Nhân Viên không?", "Xác nhận")==JOptionPane.YES_OPTION)
        {
             try {
             NhanVien nv=initNhanVien();

                
             
            NhanVien nvtest=NhanVienDAO.findById(txtMaNhanVien.getText());
            if(nvtest!=null )
                {
                     TaiKhoan tk=taiKhoanDao.findById(nvtest.getMaNV());
                     
                     
                    if(nvtest.getTrangThai()==0){
                        if(MessageDialogHelper.showConfirmDialog(null, "Nhân Viên đã Xóa khỏi danh sách \nbạn có muốn khôi phục Không?", "Xác Nhận")==JOptionPane.YES_OPTION)
                           {
                               nvtest.setTrangThai(1);
                                if(tk.getTrangThai()==10){
                               tk.setTrangThai(1);
                           }

                              if(NhanVienDAO.updateTrangThai0_1(nvtest) && taiKhoanDao.updateTrangThai0_1(tk))
                                 {
                                     nv.setTrangThai(1);
                                     btnNewActionPerformed(evt);
                                     loadDataToTable();
                                     loadDataToTableDeleteTT0();
                                    
                                      MessageDialogHelper.showMessageDialog(this, "Nhân Viên đã được Khôi Phục thành công","Thông Báo");
                                     
                                      return;
                                  }
                             }else return;
                    }
                      if(chk_CapQuyen.isSelected()==true)
                             {
                                 tk.setTrangThai(1);
                             }
                      else tk.setTrangThai(0);
                      
                    if(NhanVienDAO.update(nv) &&taiKhoanDao.updateTrangThai0_1(tk)){
                        
                         MessageDialogHelper.showMessageDialog(this, "Thông Tin Nhân Viên đã cập nhật thông tin ","Thông Báo");
                         btnNewActionPerformed(evt);
                        }
                    else
                        {
                          MessageDialogHelper.showConfirmDialog(this, "Sự cố kỹ thuật vui lòng thử lại sau!","Lỗi");
                        }
                    loadDataToTable();
                    return;
                }
             else
                {
                    if(MessageDialogHelper.showConfirmDialog(this, "Nhân Viên không tồn tại. Bạn có muốn thêm Nhân Viên này vào kho?", "Hỏi")==JOptionPane.YES_OPTION){

                        if(NhanVienDAO.insert(nv)  )
                        {
                            if(chk_CapQuyen.isSelected()==true)
                            {
                                TaiKhoan tk=initTaiKhoan(nv);
                                taiKhoanDao.insert(tk);
                            }
                  
                            MessageDialogHelper.showMessageDialog(this, "Nhân Viên đã được lưu vào danh sách","Thông Báo");
                            btnNewActionPerformed(evt);
                        }
                        else{
                            MessageDialogHelper.showConfirmDialog(this, "Sự cố kỹ thuật vui lòng thử lại sau!","Lỗi");
                            }
                        loadDataToTable();

                    }

                }
            
            
         
         
         } catch (Exception e) {
             System.out.println(e.getMessage());
            e.printStackTrace();
             
               MessageDialogHelper.showErrorDialog(jPanel2, "lỗi", "ERROR");
        }
     
           
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtHoTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenNVActionPerformed
      // this.requestFocus();
       txtHoTenNV.setText(DataValidator.xuLiChuoi(txtHoTenNV.getText()));
       txtCMND.requestFocus();
    }//GEN-LAST:event_txtHoTenNVActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        this.requestFocus();
        btnSearchActionPerformed(evt);
        
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnTimKiemNVXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemNVXActionPerformed
        try {
              ArrayList<NhanVien> list =NhanVienDAO.findNameSanPhamDaXoaTT0(txtSearchX.getText());
             
           //  listSP=SanPhamDAO.findAll();
            tblModelX.setRowCount(0);
            for (NhanVien nv : list) {
               tblModelX.addRow(new Object[]{nv.getMaNV(),nv.getHoten(),nv.getCmnd(),nv.getGioitinh(),nv.getVaitro(),nv.getNgaylam() });

            }
            tblModelX.fireTableDataChanged();
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, "Lỗi truy xuất dữ liệu", "Lỗi");
        }
    }//GEN-LAST:event_btnTimKiemNVXActionPerformed

    private void txtSearchXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchXActionPerformed
      this.requestFocus();
        btnTimKiemNVXActionPerformed(evt);
    }//GEN-LAST:event_txtSearchXActionPerformed

    private void txtMaNvDaXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNvDaXoaActionPerformed
        this.requestFocus();
        try {
            NhanVien nv=NhanVienDAO.findById(txtMaNvDaXoa.getText());
            if(nv!=null)
            {

                txtTenNVDaXoa.setText(nv.getHoten());

            }
            else{
                txtTenNVDaXoa.setText("");

            }
        } catch (Exception ex) {

        }

    }//GEN-LAST:event_txtMaNvDaXoaActionPerformed

    private void txtTenNVDaXoaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTenNVDaXoaMouseEntered

        try {
            NhanVien nv=NhanVienDAO.findById(txtMaNvDaXoa.getText());
            if(nv!=null)
            {
                txtTenNVDaXoa.setText(nv.getHoten());
            }
            else{
                txtTenNVDaXoa.setText("");
            }

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_txtTenNVDaXoaMouseEntered

      private void khoiPhucNhieuNV() throws Exception
    {
        ArrayList<NhanVien>list=NhanVienDAO.findAllTT0();
        ArrayList<String> listNV=new ArrayList<>();
        int i=0;
        for (NhanVien nv :list ) {
            if(i>=list.size()) return;
            if(tblNhanVienX.getValueAt(i, 7)==null) {
                
                 i++;
                 continue;
            }
            if((boolean)tblNhanVienX.getValueAt(i, 7)==true){
                listNV.add(nv.getMaNV());
                i++;
        }
        }
        if (listNV.size()==0|| listNV.size()==1) return;
          txtMaNvDaXoa.setText("");
          txtTenNVDaXoa.setText("");
        if( MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn khôi phục "+listNV.size()+" Nhân Viên này không ?", "Xác Nhận")==JOptionPane.YES_OPTION){
             for (String manv : listNV) {
                 NhanVien nv=NhanVienDAO.findById(manv);
                 nv.setTrangThai(1);
                 NhanVienDAO.updateTrangThai0_1(nv);
                }
             loadDataToTableDeleteTT0();
             loadDataToTable();
           
            
             
        }
       
       
    }
    private void btnKhoiPhucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhoiPhucActionPerformed
        
         
       try {
           khoiPhucNhieuNV();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        


        StringBuilder sb=new StringBuilder();
        DataValidator.empty_Data(txtMaNvDaXoa, sb, "Mã Nhân Viên không được để trống");
        if(sb.length()>0)
        {
            txtMaNvDaXoa.setBackground(Color.white);
           // MessageDialogHelper.showErrorDialog(this, sb.toString(), "Lỗi");
            
            return;
        }

        try {
            NhanVien nv=NhanVienDAO.findById(txtMaNvDaXoa.getText());
            TaiKhoan tk=taiKhoanDao.findById(txtMaNvDaXoa.getText());
            if(nv!=null){
                if(MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn Khôi Phục thông tin Nhân Viên: "+nv.getHoten()+" không?", "Xác nhận")==JOptionPane.YES_OPTION)
               {
                        if(tk.getTrangThai()==10) tk.setTrangThai(1);
                        nv.setTrangThai(1);
                        if(NhanVienDAO.updateTrangThai0_1(nv) && taiKhoanDao.updateTrangThai0_1(tk))
                        {

                            MessageDialogHelper.showMessageDialog(this, "Thông Tin Nhân Viên\n đã được Khôi Phục thành công","Thông Báo");
                            btnNewActionPerformed(evt);
                            loadDataToTable();
                            loadDataToTableDeleteTT0();

                            txtMaNvDaXoa.setText("");
                            txtTenNVDaXoa.setText("");
                        }
                }
                

            }else{
                MessageDialogHelper.showErrorDialog(this, "Nhân Viên không tồn tại, không thể Khôi Phục","Lỗi");
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, e.getMessage(), "Lỗi");

        }
    }//GEN-LAST:event_btnKhoiPhucActionPerformed

    private void xoaNhieuNVDX() throws Exception
    {
        ArrayList<NhanVien>list=NhanVienDAO.findAllTT0();
        ArrayList<String> listSp=new ArrayList<>();
        int i=0;
        for (NhanVien nv :list ) {
            if(i>=list.size()) return;
            if(tblNhanVienX.getValueAt(i, 7)==null) {
                
                 i++;
                 continue;
            }
            if((boolean)tblNhanVienX.getValueAt(i, 7)==true){
                listSp.add(nv.getMaNV());
                i++;
        }
        }
        if (listSp.size()<2) return;
         txtMaNvDaXoa.setText("");
         txtTenNVDaXoa.setText("");
        if( MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn xóa "+listSp.size()+" Nhân Viên này không ?", "Xác Nhận")==JOptionPane.YES_OPTION){
             for (String manv : listSp) {
             NhanVienDAO.delete(manv);
             
                }
             loadDataToTableDeleteTT0();
             
        }
       
    }
    private void btnXoaVinhVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaVinhVienActionPerformed

         try {
            xoaNhieuNVDX();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
        StringBuilder sb=new StringBuilder();
        DataValidator.empty_Data(txtMaNvDaXoa, sb, "Mã Nhân Viên không được để trống");
        if(sb.length()>0)
        {
           // MessageDialogHelper.showErrorDialog(this, sb.toString(), "Lỗi");
            txtMaNvDaXoa.setBackground(Color.white);
            return;
        }

        try {
            NhanVien nv=NhanVienDAO.findById(txtMaNvDaXoa.getText());
            if(nv!=null){

                if(MessageDialogHelper.showConfirmDialog(this, "Bạn có muốn xóa Nhân Viên:  "+nv.getHoten()+" không?", "Xác nhận")==JOptionPane.YES_OPTION)
                {
                        if(NhanVienDAO.delete(txtMaNvDaXoa.getText()) && taiKhoanDao.delete(txtMaNvDaXoa.getText()))
                         {

                            MessageDialogHelper.showMessageDialog(this, "Nhân Viên :"+nv.getHoten()+" đã được xóa","Thông Báo");
                            btnNewActionPerformed(evt);
                            loadDataToTable();
                            loadDataToTableDeleteTT0();
                            txtMaNvDaXoa.setText("");
                            txtTenNVDaXoa.setText("");
                        }
                }

                

            }else{
                MessageDialogHelper.showErrorDialog(this, "Nhân Viên không tồn tại, không thể xóa","Lỗi");
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(this, e.getMessage(), "Lỗi");

        }
    }//GEN-LAST:event_btnXoaVinhVienActionPerformed

    private void tblNhanVienXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienXMouseClicked
        try {
            int row=tblNhanVienX.getSelectedRow();
            if(row>=0)
            {
                String id=(String) tblNhanVienX.getValueAt(row, 0);
                NhanVien nv=NhanVienDAO.findById(id);
               
                if(nv!=null )
                { 
                   
                    txtMaNvDaXoa.setText(nv.getMaNV());
                    txtTenNVDaXoa.setText(nv.getHoten());
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblNhanVienXMouseClicked

    private void chk_CapQuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_CapQuyenActionPerformed
       if(capTaiKhoan_check(txtMaNhanVien, txtHoTenNV, txtCMND)==false)
        {
            chk_CapQuyen.setSelected(false);
        }
       
    }//GEN-LAST:event_chk_CapQuyenActionPerformed

    private void txtCMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMNDActionPerformed
        txtEmail.requestFocus();
    }//GEN-LAST:event_txtCMNDActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
       txtSDT.requestFocus();
    }//GEN-LAST:event_txtEmailActionPerformed

    public  void showAvatar(String address){
         lblAvatar.setIcon(reSizeImage(String.valueOf(address)));
    }
            
    public ImageIcon reSizeImage(String path){
            ImageIcon myImage= new ImageIcon(path);
            Image img=myImage.getImage();
            Image newImg=img.getScaledInstance(lblAvatar.getWidth(), lblAvatar.getWidth(), Image.SCALE_SMOOTH);
            ImageIcon image=new ImageIcon(newImg);
            return image;
            
        }
    public StringBuilder check_giaodienThemNV() {
        StringBuilder sb=new StringBuilder();
        DataValidator.name_Check(txtHoTenNV, sb);
        DataValidator.email_check(txtEmail, sb);
        DataValidator.numberPhone_Check(txtSDT, sb);
        DataValidator.cmnd_Check(txtCMND, sb);
        DataValidator.empty_Data(txtMaNhanVien, sb, "Mã Nhân Viên Chưa Được Nhập");
        if(DataValidator.datecheck(datechNgayLam)==false)
        {
            sb.append("Ngày Vào Làm chưa được nhập\n");
            datechNgayLam.setBackground(Color.red);
        }
        else datechNgayLam.setBackground(Color.white);
        if(DataValidator.datecheck(dateChNgaySinh)==false)
        {
            sb.append("Ngày Sinh chưa được nhập\n");
            dateChNgaySinh.setBackground(Color.red);
        }else  dateChNgaySinh.setBackground(Color.white);
        return sb;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.ButtonGroup btnGGioiTinh;
    private javax.swing.ButtonGroup btnGVaitro;
    private javax.swing.JButton btnKhoiPhuc;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRestore;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTimKiemNVX;
    private javax.swing.JButton btnXoaVinhVien;
    private javax.swing.JCheckBox chk_CapQuyen;
    private com.toedter.calendar.JDateChooser dateChNgaySinh;
    private com.toedter.calendar.JDateChooser datechNgayLam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAvatar;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNhanVien;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.JRadioButton rdTruongPhong;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTable tblNhanVienX;
    private javax.swing.JTextArea txtAGhichu;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTenNV;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtMaNvDaXoa;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchX;
    private javax.swing.JTextField txtTenNVDaXoa;
    // End of variables declaration//GEN-END:variables

   
}
